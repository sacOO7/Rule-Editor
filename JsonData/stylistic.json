[
  {
    "RuleName": "array-bracket-spacing",
    "Details": "enforce consistent spacing inside array brackets"
  },
  {
    "RuleName": "jsx-quotes",
    "Details": "enforce the consistent use of either double or single quotes in JSX attributes"
  },
  {
    "RuleName": "no-trailing-spaces",
    "Details": "disallow trailing whitespace at the end of lines"
  },
  {
    "RuleName": "sort-vars",
    "Details": "require variables within the same declaration block to be sorted"
  },
  {
    "RuleName": "func-names",
    "Details": "require or disallow named function expressions"
  },
  {
    "RuleName": "no-multi-assign",
    "Details": "disallow use of chained assignment expressions"
  },
  {
    "RuleName": "block-spacing",
    "Details": "enforce consistent spacing inside single-line blocks"
  },
  {
    "RuleName": "quote-props",
    "Details": "require quotes around object literal property names"
  },
  {
    "RuleName": "id-blacklist",
    "Details": "disallow specified identifiers"
  },
  {
    "RuleName": "operator-assignment",
    "Details": "require or disallow assignment operator shorthand where possible"
  },
  {
    "RuleName": "comma-spacing",
    "Details": "enforce consistent spacing before and after commas"
  },
  {
    "RuleName": "one-var-declaration-per-line",
    "Details": "require or disallow newlines around variable declarations"
  },
  {
    "RuleName": "no-multiple-empty-lines",
    "Details": "disallow multiple empty lines"
  },
  {
    "RuleName": "no-new-object",
    "Details": "disallow Object constructors"
  },
  {
    "RuleName": "no-inline-comments",
    "Details": "disallow inline comments after code"
  },
  {
    "RuleName": "no-negated-condition",
    "Details": "disallow negated conditions"
  },
  {
    "RuleName": "eol-last",
    "Details": "require or disallow newline at the end of files"
  },
  {
    "RuleName": "multiline-ternary",
    "Details": "enforce newlines between operands of ternary expressions"
  },
  {
    "RuleName": "comma-style",
    "Details": "enforce consistent comma style"
  },
  {
    "RuleName": "max-nested-callbacks",
    "Details": "enforce a maximum depth that callbacks can be nested"
  },
  {
    "RuleName": "func-name-matching",
    "Details": "require function names to match the name of the variable or property to which they are assigned"
  },
  {
    "RuleName": "no-ternary",
    "Details": "disallow ternary operators"
  },
  {
    "RuleName": "object-curly-spacing",
    "Details": "enforce consistent spacing inside braces"
  },
  {
    "RuleName": "lines-around-comment",
    "Details": "require empty lines around comments"
  },
  {
    "RuleName": "max-len",
    "Details": "enforce a maximum line length"
  },
  {
    "RuleName": "no-mixed-operators",
    "Details": "disallow mixed binary operators"
  },
  {
    "RuleName": "newline-per-chained-call",
    "Details": "require a newline after each call in a method chain"
  },
  {
    "RuleName": "no-continue",
    "Details": "disallow continue statements"
  },
  {
    "RuleName": "key-spacing",
    "Details": "enforce consistent spacing between keys and values in object literal properties"
  },
  {
    "RuleName": "sort-keys",
    "Details": "require object keys to be sorted"
  },
  {
    "RuleName": "padded-blocks",
    "Details": "require or disallow padding within blocks"
  },
  {
    "RuleName": "keyword-spacing",
    "Details": "enforce consistent spacing before and after keywords"
  },
  {
    "RuleName": "no-nested-ternary",
    "Details": "disallow nested ternary expressions"
  },
  {
    "RuleName": "max-lines",
    "Details": "enforce a maximum number of lines per file"
  },
  {
    "RuleName": "brace-style",
    "Details": "enforce consistent brace style for blocks"
  },
  {
    "RuleName": "require-jsdoc",
    "Details": "require JSDoc comments"
  },
  {
    "RuleName": "wrap-regex",
    "Details": "require parenthesis around regex literals"
  },
  {
    "RuleName": "id-match",
    "Details": "require identifiers to match a specified regular expression"
  },
  {
    "RuleName": "new-parens",
    "Details": "require parentheses when invoking a constructor with no arguments"
  },
  {
    "RuleName": "line-comment-position",
    "Details": "enforce position of line comments"
  },
  {
    "RuleName": "capitalized-comments",
    "Details": "enforce or disallow capitalization of the first letter of a comment"
  },
  {
    "RuleName": "new-cap",
    "Details": "require constructor names to begin with a capital letter"
  },
  {
    "RuleName": "consistent-this",
    "Details": "enforce consistent naming when capturing the current execution context"
  },
  {
    "RuleName": "newline-after-var",
    "Details": "require or disallow an empty line after variable declarations"
  },
  {
    "RuleName": "indent",
    "Details": "enforce consistent indentation"
  },
  {
    "RuleName": "lines-around-directive",
    "Details": "require or disallow newlines around directives"
  },
  {
    "RuleName": "func-call-spacing",
    "Details": "require or disallow spacing between function identifiers and their invocations"
  },
  {
    "RuleName": "no-mixed-spaces-and-tabs",
    "Details": "disallow mixed spaces and tabs for indentation"
  },
  {
    "RuleName": "no-unneeded-ternary",
    "Details": "disallow ternary operators when simpler alternatives exist"
  },
  {
    "RuleName": "object-property-newline",
    "Details": "enforce placing object properties on separate lines"
  },
  {
    "RuleName": "space-unary-ops",
    "Details": "enforce consistent spacing before or after unary operators"
  },
  {
    "RuleName": "space-before-blocks",
    "Details": "enforce consistent spacing before blocks"
  },
  {
    "RuleName": "template-tag-spacing",
    "Details": "require or disallow spacing between template tags and their literals"
  },
  {
    "RuleName": "newline-before-return",
    "Details": "require an empty line before return statements"
  },
  {
    "RuleName": "unicode-bom",
    "Details": "require or disallow Unicode byte order mark (BOM)"
  },
  {
    "RuleName": "no-whitespace-before-property",
    "Details": "disallow whitespace before properties"
  },
  {
    "RuleName": "no-array-constructor",
    "Details": "disallow Array constructors"
  },
  {
    "RuleName": "object-curly-newline",
    "Details": "enforce consistent line breaks inside braces"
  },
  {
    "RuleName": "no-plusplus",
    "Details": "disallow the unary operators ++ and --"
  },
  {
    "RuleName": "max-params",
    "Details": "enforce a maximum number of parameters in function definitions"
  },
  {
    "RuleName": "space-in-parens",
    "Details": "enforce consistent spacing inside parentheses"
  },
  {
    "RuleName": "max-statements",
    "Details": "enforce a maximum number of statements allowed in function blocks"
  },
  {
    "RuleName": "spaced-comment",
    "Details": "enforce consistent spacing after the // or /* in a comment"
  },
  {
    "RuleName": "camelcase",
    "Details": "enforce camelcase naming convention"
  },
  {
    "RuleName": "comma-dangle",
    "Details": "require or disallow trailing commas"
  },
  {
    "RuleName": "func-style",
    "Details": "enforce the consistent use of either function declarations or expressions"
  },
  {
    "RuleName": "one-var",
    "Details": "enforce variables to be declared either together or separately in functions"
  },
  {
    "RuleName": "operator-linebreak",
    "Details": "enforce consistent linebreak style for operators"
  },
  {
    "RuleName": "space-before-function-paren",
    "Details": "enforce consistent spacing before function definition opening parenthesis"
  },
  {
    "RuleName": "no-restricted-syntax",
    "Details": "disallow specified syntax"
  },
  {
    "RuleName": "linebreak-style",
    "Details": "enforce consistent linebreak style"
  },
  {
    "RuleName": "no-lonely-if",
    "Details": "disallow if statements as the only statement in else blocks"
  },
  {
    "RuleName": "max-depth",
    "Details": "enforce a maximum depth that blocks can be nested"
  },
  {
    "RuleName": "max-statements-per-line",
    "Details": "enforce a maximum number of statements allowed per line"
  },
  {
    "RuleName": "space-infix-ops",
    "Details": "require spacing around infix operators"
  },
  {
    "RuleName": "nonblock-statement-body-position",
    "Details": "enforce the location of single-line statements"
  },
  {
    "RuleName": "semi",
    "Details": "require or disallow semicolons instead of ASI"
  },
  {
    "RuleName": "id-length",
    "Details": "enforce minimum and maximum identifier lengths"
  },
  {
    "RuleName": "quotes",
    "Details": "enforce the consistent use of either backticks, double, or single quotes"
  },
  {
    "RuleName": "no-bitwise",
    "Details": "disallow bitwise operators"
  },
  {
    "RuleName": "no-tabs",
    "Details": "disallow all tabs"
  },
  {
    "RuleName": "computed-property-spacing",
    "Details": "enforce consistent spacing inside computed property brackets"
  },
  {
    "RuleName": "semi-spacing",
    "Details": "enforce consistent spacing before and after semicolons"
  },
  {
    "RuleName": "no-underscore-dangle",
    "Details": "disallow dangling underscores in identifiers"
  }
]
